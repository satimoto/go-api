type User {
    id: ID!
    pubkey: String!
    deviceToken: String
    referralCode: String
    node: Node
}

input CreateUserInput {
    code: String!
    pubkey: String!
    deviceToken: String
    lsp: Boolean
}

input PongUserInput {
    pong: String!
}

input UpdateUserInput {
    deviceToken: String!
    name: String
    address: String
    postalCode: String
    city: String
}

extend type Query {
    getUser: User!
}

extend type Mutation {
    createUser(input: CreateUserInput!): User!
    pingUser(id: ID!): ResultOk!
    pongUser(input: PongUserInput!): ResultOk!
    updateUser(input: UpdateUserInput!): User!
}
